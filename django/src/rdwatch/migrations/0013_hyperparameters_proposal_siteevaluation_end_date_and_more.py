# Generated by Django 4.1.9 on 2023-08-01 07:04

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('rdwatch', '0012_alter_siteobservation_timestamp'),
    ]

    operations = [
        migrations.AddField(
            model_name='hyperparameters',
            name='proposal',
            field=models.BooleanField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='siteevaluation',
            name='end_date',
            field=models.DateTimeField(help_text='end date in geoJSON', null=True),
        ),
        migrations.AddField(
            model_name='siteevaluation',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='siteevaluation',
            name='start_date',
            field=models.DateTimeField(help_text='Start date in geoJSON', null=True),
        ),
        migrations.AddField(
            model_name='siteevaluation',
            name='status',
            field=models.CharField(
                blank=True,
                choices=[
                    ('PROPOSAL', 'Proposal'),
                    ('APPROVED', 'Approved'),
                    ('REJECTED', 'Rejected'),
                ],
                help_text='Fetching Status',
                max_length=255,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name='siteobservation',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='SiteObservationTracking',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('edited', models.DateTimeField()),
                ('score', models.FloatField(help_text='Evaluation accuracy')),
                (
                    'geom',
                    django.contrib.gis.db.models.fields.PolygonField(
                        help_text='Footprint of site observation', srid=3857
                    ),
                ),
                ('notes', models.TextField(blank=True, null=True)),
                (
                    'label',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to='rdwatch.observationlabel',
                    ),
                ),
                (
                    'observation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='base_site_observation',
                        to='rdwatch.siteobservation',
                    ),
                ),
                (
                    'siteeval',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='rdwatch.siteevaluation',
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='SiteEvaluationTracking',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('edited', models.DateTimeField()),
                (
                    'start_date',
                    models.DateTimeField(help_text='Start date in geoJSON', null=True),
                ),
                (
                    'end_date',
                    models.DateTimeField(help_text='end date in geoJSON', null=True),
                ),
                ('score', models.FloatField(help_text='Score of site footprint')),
                ('notes', models.TextField(blank=True, null=True)),
                (
                    'evaluation',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='rdwatch.siteevaluation',
                    ),
                ),
                (
                    'label',
                    models.ForeignKey(
                        help_text='Site feature classification label',
                        on_delete=django.db.models.deletion.PROTECT,
                        to='rdwatch.observationlabel',
                    ),
                ),
            ],
        ),
    ]
