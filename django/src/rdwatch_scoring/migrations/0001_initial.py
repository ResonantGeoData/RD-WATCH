# Generated by Django 4.1.9 on 2023-07-12 08:10

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='EvaluationActivityClassificationF1',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('site', models.CharField(max_length=255)),
                ('metric', models.CharField(max_length=255)),
                ('site_preparation', models.FloatField(blank=True, null=True)),
                ('active_construction', models.FloatField(blank=True, null=True)),
                ('post_construction', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_activity_classification_f1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationActivityClassificationMatrix',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('site', models.CharField(max_length=255)),
                ('phase_truth', models.CharField(max_length=255)),
                (
                    'phase_proposal_no_activity',
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    'phase_proposal_site_preparation',
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    'phase_proposal_active_construction',
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    'phase_proposal_post_construction',
                    models.IntegerField(blank=True, null=True),
                ),
            ],
            options={
                'db_table': 'evaluation_activity_classification_matrix',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationActivityClassificationPhase',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('site_truth', models.CharField(max_length=255)),
                ('site_proposal', models.CharField(max_length=255)),
                ('site_truth_phase', models.TextField(blank=True, null=True)),
                ('site_proposal_phase', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_activity_classification_phase',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationActivityClassificationTemporalError',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('site', models.CharField(max_length=255)),
                ('metric', models.CharField(max_length=255)),
                ('site_preparation', models.FloatField(blank=True, null=True)),
                ('active_construction', models.FloatField(blank=True, null=True)),
                ('post_construction', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_activity_classification_temporal_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationActivityClassificationTemporalIou',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('site_truth', models.CharField(max_length=255)),
                ('site_proposal', models.CharField(max_length=255)),
                ('site_preparation', models.FloatField(blank=True, null=True)),
                ('active_construction', models.FloatField(blank=True, null=True)),
                ('post_construction', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_activity_classification_temporal_iou',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationActivityPredictionTemporalError',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('site', models.CharField(max_length=255)),
                ('metric', models.CharField(max_length=255)),
                ('site_preparation', models.FloatField(blank=True, null=True)),
                ('active_construction', models.FloatField(blank=True, null=True)),
                ('post_construction', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_activity_prediction_temporal_error',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationBroadAreaSearchDetection',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('rho', models.FloatField()),
                ('tau', models.FloatField()),
                ('min_area', models.FloatField()),
                ('site_truth', models.CharField(max_length=255)),
                ('site_truth_type', models.CharField(max_length=255)),
                ('site_truth_area', models.FloatField()),
                ('site_proposal_matched', models.TextField(blank=True, null=True)),
                (
                    'site_proposal_matched_count',
                    models.IntegerField(blank=True, null=True),
                ),
                ('detection_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_broad_area_search_detection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationBroadAreaSearchMetric',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('rho', models.FloatField()),
                ('tau', models.FloatField()),
                ('min_area', models.FloatField()),
                ('tp_sites', models.IntegerField(blank=True, null=True)),
                ('tp_exact', models.IntegerField(blank=True, null=True)),
                ('tp_under', models.IntegerField(blank=True, null=True)),
                ('tp_under_iou', models.IntegerField(blank=True, null=True)),
                ('tp_under_iot', models.IntegerField(blank=True, null=True)),
                ('tp_over', models.IntegerField(blank=True, null=True)),
                ('fp_sites', models.IntegerField(blank=True, null=True)),
                ('fp_area', models.FloatField(blank=True, null=True)),
                ('ffpa', models.FloatField(blank=True, null=True)),
                ('proposal_area', models.FloatField(blank=True, null=True)),
                ('fpa', models.FloatField(blank=True, null=True)),
                ('fn_sites', models.IntegerField(blank=True, null=True)),
                ('truth_annotations', models.IntegerField(blank=True, null=True)),
                ('truth_sites', models.IntegerField(blank=True, null=True)),
                ('proposed_annotations', models.IntegerField(blank=True, null=True)),
                ('proposed_sites', models.IntegerField(blank=True, null=True)),
                ('total_sites', models.IntegerField(blank=True, null=True)),
                ('truth_slices', models.IntegerField(blank=True, null=True)),
                ('proposed_slices', models.IntegerField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall_pd', models.FloatField(blank=True, null=True)),
                ('f1', models.FloatField(blank=True, null=True)),
                ('spatial_far', models.FloatField(blank=True, null=True)),
                ('temporal_far', models.FloatField(blank=True, null=True)),
                ('images_far', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_broad_area_search_metric',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationBroadAreaSearchProposal',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('activity_type', models.CharField(max_length=255)),
                ('rho', models.FloatField()),
                ('tau', models.FloatField()),
                ('min_area', models.FloatField()),
                ('site_proposal', models.CharField(max_length=255)),
                ('site_proposal_area', models.FloatField()),
                ('site_truth_matched', models.TextField(blank=True, null=True)),
                (
                    'site_truth_matched_count',
                    models.IntegerField(blank=True, null=True),
                ),
            ],
            options={
                'db_table': 'evaluation_broad_area_search_proposal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EvaluationRun',
            fields=[
                (
                    'uuid',
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ('evaluation_phase', models.CharField(max_length=255)),
                ('evaluation_number', models.IntegerField()),
                ('evaluation_run_number', models.IntegerField()),
                ('evaluation_increment_number', models.IntegerField()),
                ('performer', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('mode', models.CharField(max_length=255)),
                ('increment_start_date', models.DateField(blank=True, null=True)),
                ('increment_end_date', models.DateField(blank=True, null=True)),
                ('dag_run_id', models.CharField(blank=True, max_length=255, null=True)),
                ('start_datetime', models.DateTimeField()),
                ('success', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'evaluation_run',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                (
                    'uuid',
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ('date', models.DateField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('sensor', models.CharField(blank=True, max_length=255, null=True)),
                ('phase', models.CharField(blank=True, max_length=255, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('crs', models.CharField(blank=True, max_length=255, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                (
                    'is_site_boundary',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                'db_table': 'observation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObservationComparison',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('intersection_geometry', models.TextField(blank=True, null=True)),
                ('union_geometry', models.TextField(blank=True, null=True)),
                ('intersection_area', models.FloatField(blank=True, null=True)),
                ('union_area', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'observation_comparison',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Performer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('performer_name', models.CharField(max_length=255)),
                ('performer_code', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'performer_code_mapping',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provenance',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('test_harness_git_hash', models.CharField(max_length=255)),
                ('small_site_threshold', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'provenance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                (
                    'id',
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('crs', models.CharField(blank=True, max_length=255, null=True)),
                ('mgrs', models.CharField(blank=True, max_length=255, null=True)),
                ('geometry', models.TextField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'region',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                (
                    'uuid',
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ('site_id', models.CharField(max_length=255)),
                ('originator', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('crs', models.CharField(blank=True, max_length=255, null=True)),
                ('mgrs', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'status_annotated',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'predicted_phase',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ('predicted_date', models.DateField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('union_geometry', models.TextField(blank=True, null=True)),
                ('union_area', models.FloatField(blank=True, null=True)),
                ('sites', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'site',
                'managed': False,
            },
        ),
    ]
