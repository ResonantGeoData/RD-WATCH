[build-system]
requires = ["poetry-core>=1.8.2", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"


[tool.poetry]
name = "rdwatch"
version = "0.0.0dev0"
description = "A Django-based web application to support the Kitware WATCH project."
license = "Apache-2.0"
authors = [ "Kitware, Inc. <kitware@kitware.com>" ]
readme = "README.md"
homepage = "https://watch.resonantgeodata.com"
repository = "https://github.com/ResonantGeoData/RD-WATCH/django"
keywords = [ "django", "geospatial", "machine learning" ]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Web Environment",
  "Framework :: Django :: 5.0",
  "Framework :: Django",
]
packages = [
  { include = "rdwatch", from = "src" },
  { include = "rdwatch_scoring", from = "src"},
  { include = "rdwatch_smartflow", from = "src"},
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
metadata = true

[tool.poetry-dynamic-versioning.substitution]
files = ["src/rdwatch/__init__.py", "src/rdwatch_scoring/__init__.py", "src/rdwatch_smartflow/__init__.py"]

[tool.poetry.dependencies]
python = ">=3.11.8,<4"
django = ">=5.0.3,<5.1"
psycopg2 = "~2.9.9"
redis = { version = "~5.0.3", extras = [ "hiredis" ] }
uritemplate = "^4.1.1"
iso3166 = "^2.1.1"
rio-tiler = "5.0.3" # TODO: upgrade blocked on pydantic 2
mercantile = "^1.2.1"
django-ninja = "~0.22.2" # TODO: upgrade blocked on pydantic 2
celery = "^5.3.6"
django-extensions = "^3.2.3"
pillow = "^10.2.0"
django-configurations = {version = "^2.5", extras = ["database", "email"]}
django-storages = {version = "^1.14.2", extras = ["s3"]}
django-celery-results = "^2.5.1"
segment-anything = {git = "https://github.com/facebookresearch/segment-anything.git"}
opencv-python = "^4.9.0.80"
numpy = "^1.26.4"
onnx = "^1.15.0"
onnxruntime = "^1.17.0"
pystac-client = "^0.7.6"
more-itertools = "^10.2.0"
torch = {version = "^2.2.2+cpu", source = "pytorch"}
torchvision = {version = "^0.17.2+cpu", source = "pytorch"}
apache-airflow-client = "^2.9.0"
beautifulsoup4 = "^4.12.3"
django-allauth = {extras = ["socialaccount"], version = "^0.63.2"}
django-login-required-middleware = "^0.9.0"

[tool.poetry.group.dev.dependencies]
django-stubs = "^4.2.7"
pre-commit = "^3.7.0"
tox = "^4.14.2"
django-minio-storage = "^0.5.7"
werkzeug = "^3.0.2"
django-debug-toolbar = "^4.3.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-django = "^4.8.0"
freezegun = "^1.4.0"
geojson = "^3.1.0"
deepdiff = "^7.0.1"

[tool.poetry.group.test]
optional = true

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"


# Linting/formatting/typing configuration
[tool.black]
skip-string-normalization = true

[tool.isort]
profile = "black"
known_first_party = ["rdwatch", "rdwatch_scoring", "rdwatch_smartflow"]
known_django=["django"]
sections=["FUTURE", "STDLIB", "THIRDPARTY", "DJANGO", "FIRSTPARTY", "LOCALFOLDER"]


[tool.mypy]
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]


[[tool.mypy.overrides]]
module = [
  "mercantile"
]
ignore_missing_imports = true


[tool.django-stubs]
django_settings_module = "rdwatch.server.settings"


[tool.flake8]
extend_exclude = [".venv"]
extend_ignore = [
  # https://black.readthedocs.io/en/stable/guides/using_black_with_other_tools.html?highlight=flake8#flake8
  "E203",
]
max_line_length = 88
