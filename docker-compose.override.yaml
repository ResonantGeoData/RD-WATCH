services:
  django:
    build:
      dockerfile: Dockerfile
      target: builder
    command: [
      "poetry", "run",
      "--directory", "/app/django",
      "django-admin",
      "runserver", "0.0.0.0:8000"
    ]
    # Log printing via Rich is enhanced by a TTY
    tty: true
    env_file: ./dev/.env.docker-compose
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:?}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:?}
      RDWATCH_SMART_STAC_URL: ${RDWATCH_SMART_STAC_URL:?}
      RDWATCH_SMART_STAC_KEY: ${RDWATCH_SMART_STAC_KEY:?}
    volumes:
      - ./django:/app/django
    ports:
      - 8000:8000
    depends_on:
      - postgresql
      - rabbitmq
      - redis-master
      - minio

  celery:
    build:
      dockerfile: Dockerfile
      target: builder
    command: [
      "poetry", "run",
      "--directory", "/app/django",
      "celery",
      "--app", "rdwatch.celery",
      "worker",
      "--loglevel", "INFO",
      "--without-heartbeat",
    ]
    # Log printing via Rich is enhanced by a TTY
    tty: true
    env_file: ./dev/.env.docker-compose
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:?}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:?}
      RDWATCH_SMART_STAC_URL: ${RDWATCH_SMART_STAC_URL:?}
      RDWATCH_SMART_STAC_KEY: ${RDWATCH_SMART_STAC_KEY:?}
    volumes:
      - ./django:/app/django
    depends_on:
      - postgresql
      - rabbitmq
      - minio
      - redis-master
      - django
